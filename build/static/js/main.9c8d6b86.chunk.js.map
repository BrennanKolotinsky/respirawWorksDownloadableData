{"version":3,"sources":["logo.svg","services/index.js","data-file-table/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["url","window","location","host","getFileNames","a","route","axios","method","crossDomain","downloadFile","fileName","data","DataFileTable","props","useState","setLoadedFileNames","files","setFiles","useEffect","fileNames","fetchData","filesTable","map","file","index","className","type","value","onClick","createFile","resp","downloadName","split","fileToSave","Blob","JSON","stringify","name","saveAs","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,I,6CCETA,EAA+B,mBAAzBC,OAAOC,SAASC,KAA4B,wBAA0B,GAE5EC,EAAY,uCAAG,4BAAAC,EAAA,6DACdC,EAAQN,EAAM,6BADA,SAEPO,IAAM,CACZC,OAAQ,MACRR,IAAKM,EACLG,aAAa,IALA,mFAAH,qDASZC,EAAY,uCAAI,WAAOC,GAAP,eAAAN,EAAA,6DACZC,EADY,UACDN,EADC,kDAC4CW,GAD5C,SAELJ,IAAM,CACfC,OAAQ,MACRR,IAAKM,EACLG,aAAa,EACbG,KAAM,CACFD,cAPU,mFAAJ,sD,6BC2DHE,EAlEO,SAACC,GAErB,MAA6CC,oBAAS,GAAtD,mBAAuBC,GAAvB,WACA,EAAyBD,mBAAS,IAAlC,mBAAME,EAAN,KAAaC,EAAb,KAEAC,qBAAU,YACO,uCAAG,8BAAAd,EAAA,sEACID,IADJ,OACVa,EADU,OAEhBD,GAAmB,GACnBE,EAAQ,OAACD,QAAD,IAACA,GAAD,UAACA,EAAOL,YAAR,aAAC,EAAaQ,WAHN,2CAAH,qDAKfC,KACC,IAEH,IAAMC,EAAaL,EAAMM,KAAI,SAACC,EAAMC,GACjC,OAAO,sBAAKC,UAAU,GAAf,UACO,IAAVD,EAEE,sBAAKC,UAAU,aAAf,UACE,mBAAGA,UAAU,aAAb,SAA0B,8CAC1B,mBAAGA,UAAU,gBAAb,SAA6B,iDAC7B,mBAAGA,UAAU,gBAAb,SAA6B,oDAG/B,KAGJ,sBAAKA,UAAU,aAAf,UACE,mBAAGA,UAAU,aAAb,SAA4BD,EAAQ,IACpC,mBAAGC,UAAU,aAAb,SAA4BF,IAC5B,uBAAOG,KAAK,SAASD,UAAU,wDAC7BE,MAAM,WAAWC,QAAS,kBAAMC,EAAWN,QAJdC,KAZLA,MAqB3BK,EAAU,uCAAG,WAAOnB,GAAP,mBAAAN,EAAA,sEACEK,EAAaC,GADf,OACXoB,EADW,OAGXC,EAAerB,EAASsB,MAAM,KAAK,GAAK,QAG1CC,EAAa,IAAIC,KAAK,CAACC,KAAKC,UAAUN,EAAKnB,KAAKY,OAAQ,CACxDG,KAAM,mBACNW,KAAMN,IAIVO,iBAAOL,EAAYF,GAZF,2CAAH,sDAehB,OACE,8BAEE,sBAAKN,UAAU,0BAAf,UACE,oBAAIA,UAAU,OAAd,qCACCJ,Q,MC1DM,SAASkB,IACtB,OACE,8BACE,cAAC,EAAD,MCPN,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c8d6b86.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios';\n\nconst url = window.location.host === \"localhost:3000\" ? \"http://localhost:3001\" : \"\";\n\nconst getFileNames = async () => {\n\tconst route = url + \"/get-mongo-data/file-names\";\n\treturn await axios({\n        method: \"GET\", \n        url: route,\n        crossDomain: true,\n    });\n}\n\nconst downloadFile  = async (fileName) => {\n    const route = `${url}/get-mongo-data/download-file?fileName=${fileName}`;\n    return await axios({\n        method: \"GET\", \n        url: route,\n        crossDomain: true,\n        data: {\n            fileName,\n        }\n    });\n}\n\nexport { \n    getFileNames,\n    downloadFile,\n};","import React, { useEffect, useState } from 'react';\nimport { getFileNames, downloadFile } from '../services/index';\nimport './index.css'\nimport fs from 'fs';\nimport { saveAs } from 'file-saver';\n\nconst DataFileTable = (props) => {\n\n  const[loadedFileNames, setLoadedFileNames] = useState(false);\n  const[files, setFiles] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const files = await getFileNames();\n      setLoadedFileNames(true);\n      setFiles(files?.data?.fileNames);\n    }\n    fetchData();\n  }, []);\n\n  const filesTable = files.map((file, index) => {\n     return <div className=\"\" key={index}>\n       { index === 0 ?\n         (\n           <div className=\"row border\">\n             <p className=\"col-2 mt-3\"><strong>Index:</strong></p>\n             <p className=\"col-6 my-auto\"><strong>Filename:</strong></p>\n             <p className=\"col-4 my-auto\"><strong>Download:</strong></p>\n           </div>\n         )\n         : null \n       }\n\n       <div className=\"row border\" key={index}>\n         <p className=\"col-2 mt-3\">{ index + 1 }</p>\n         <p className=\"col-6 mt-3\">{ file }</p>\n         <input type=\"button\" className=\"btn btn-primary col-4 my-auto download-button mx-auto\"\n           value=\"DOWNLOAD\" onClick={() => createFile(file)}></input>\n       </div>\n     </div>\n  });\n\n  const createFile = async (fileName) => {\n    const resp = await downloadFile(fileName);\n\n    const downloadName = fileName.split('.')[0] + '.json';\n\n    // Create a blob of the data\n    var fileToSave = new Blob([JSON.stringify(resp.data.file)], {\n        type: 'application/json',\n        name: downloadName\n    });\n\n    // Save the file\n    saveAs(fileToSave, downloadName);\n  };\n  \n  return (\n    <div>\n\n      <div className=\"container max-width-600\">\n        <h2 className=\"mt-3\">Downloadable Test Data:</h2>\n        {filesTable}\n      </div>\n\n      \n      \n    </div>\n  );\n\n}\n\nexport default DataFileTable;","import logo from './logo.svg';\nimport DataFileTable from './data-file-table/index.jsx'\nimport './App.scss';\n\nexport default function App() {\n  return (\n    <div>\n      <DataFileTable />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}